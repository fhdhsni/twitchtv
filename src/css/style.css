@import url(./normalize.css);
.wrapper, .result {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
}

body,
ul,
li,
a,
div,
span,
p {
  margin: 0;
  padding: 0;
}

ul {
  list-style: none;
}

a {
  text-decoration: none;
}

.online {
  color: #00a837;
}

.offline {
  color: #f14949;
}

#search {
  font-size: 1em;
  text-align: center;
}

@media (max-width: 850px) {
  #search {
    font-size: .9em;
  }
}

.status {
  color: #383838;
  font-size: .85em;
  line-height: 1.5;
}

.result a {
  color: #338abb;
}

.result a:hover {
  cursor: pointer;
  color: #e85a8f;
}

.wrapper {
  margin: auto;
  width: 75%;
}

@media (max-width: 1000px) {
  .wrapper {
    width: 80%;
  }
}

@media (max-width: 850px) {
  .wrapper {
    width: 90%;
  }
}

@media (max-width: 650px) {
  .wrapper {
    width: 98%;
  }
}

img {
  border-radius: 50%;
  width: 8%;
}

#search {
  background-color: #ababab;
  border: 0;
  border-radius: 0.3em;
  margin-top: 2em;
  padding: 1.5em;
}

#search:focus {
  background-color: #c5c5c5;
}

.result li {
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  background-color: #dedede;
  border-radius: 0.3em;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  margin-top: .5em;
  padding: .5em 1em;
}

.result li:hover {
  background-color: #d1d1d1;
}

.result li a {
  margin-left: 1em;
  width: 10%;
}

.result li .status {
  margin: auto;
  text-align: center;
  width: 45ch;
}

@media (max-width: 850px) {
  .result li .status {
    display: none;
  }
}

.result li .online,
.result li .offline {
  margin-left: auto;
}

.existence {
  margin: auto;
  padding: 1em;
}

/*# sourceMappingURL=data:application/json;base64, */